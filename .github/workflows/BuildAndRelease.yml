name: Build and Release Workflow

on:
  workflow_run:
    workflows: ["run Tests"]
    types:
      - completed
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci

      - name: Configure git user
        run: |
          git config --global user.email "GHActions@demifinance.com"
          git config --global user.name "GH Runner"

      - name: Increment version and tag
        id: version
        run: |
          NEW_VERSION=$(npm version patch -m "Upgrade to %s for reasons")
          echo "::set-output name=new_tag::$NEW_VERSION"
          git push --follow-tags

      - name: Build Docker image
        run: |
          VERSION=$(git describe --tags --always | tr '[:upper:]' '[:lower:]')
          COMMIT_SHA=$(git rev-parse --short HEAD | tr '[:upper:]' '[:lower:]')
          REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
          echo "VERSION: '$VERSION'"
          echo "COMMIT_SHA: '$COMMIT_SHA'"
          echo "REPO_NAME: '$REPO_NAME'"
          docker build . -t ghcr.io/$REPO_NAME:$VERSION \
                         -t ghcr.io/$REPO_NAME:$COMMIT_SHA \
                         -t ghcr.io/$REPO_NAME:latest

      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Docker image to GitHub Packages
        run: |
          export VERSION=$(git describe --tags --always | tr '[:upper:]' '[:lower:]')
          export COMMIT_SHA=$(git rev-parse --short HEAD | tr '[:upper:]' '[:lower:]')
          export REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
          echo "Pushing ghcr.io/$REPO_NAME:$VERSION"
          docker push ghcr.io/$REPO_NAME:$VERSION
          echo "Pushing ghcr.io/$REPO_NAME:$COMMIT_SHA"
          docker push ghcr.io/$REPO_NAME:$COMMIT_SHA
          echo "Pushing ghcr.io/$REPO_NAME:latest"
          docker push ghcr.io/$REPO_NAME:latest

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.new_tag }}
          release_name: Release ${{ steps.version.outputs.new_tag }}
          draft: false
          prerelease: false

      - name: Upload Docker image to release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./path-to-your-image.tar # Replace with the path to your Docker image tarball
          asset_name: image.tar
          asset_content_type: application/octet-stream
